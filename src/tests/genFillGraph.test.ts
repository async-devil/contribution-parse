import xLines from '../utils/generator' 

test('Generating 5x5 graph',() => {
    expect(xLines(4)).toBe(`<line x1="{{_ 0}}" y1="{{_ 0}}" x2="{{_ 210}}" y2="{{_ 0}}"/>
<line x1="{{_ 0}}" y1="{{_ 25}}" x2="{{_ 210}}" y2="{{_ 25}}"/>
<line x1="{{_ 0}}" y1="{{_ 50}}" x2="{{_ 210}}" y2="{{_ 50}}"/>
<line x1="{{_ 0}}" y1="{{_ 75}}" x2="{{_ 210}}" y2="{{_ 75}}"/>
<line x1="{{_ 0}}" y1="{{_ 100}}" x2="{{_ 210}}" y2="{{_ 100}}"/>`)
})

test('Generating 11x11 graph',() => {
    expect(xLines(10)).toBe(`<line x1="{{_ 0}}" y1="{{_ 0}}" x2="{{_ 210}}" y2="{{_ 0}}"/>
<line x1="{{_ 0}}" y1="{{_ 10}}" x2="{{_ 210}}" y2="{{_ 10}}"/>
<line x1="{{_ 0}}" y1="{{_ 20}}" x2="{{_ 210}}" y2="{{_ 20}}"/>
<line x1="{{_ 0}}" y1="{{_ 30}}" x2="{{_ 210}}" y2="{{_ 30}}"/>
<line x1="{{_ 0}}" y1="{{_ 40}}" x2="{{_ 210}}" y2="{{_ 40}}"/>
<line x1="{{_ 0}}" y1="{{_ 50}}" x2="{{_ 210}}" y2="{{_ 50}}"/>
<line x1="{{_ 0}}" y1="{{_ 60}}" x2="{{_ 210}}" y2="{{_ 60}}"/>
<line x1="{{_ 0}}" y1="{{_ 70}}" x2="{{_ 210}}" y2="{{_ 70}}"/>
<line x1="{{_ 0}}" y1="{{_ 80}}" x2="{{_ 210}}" y2="{{_ 80}}"/>
<line x1="{{_ 0}}" y1="{{_ 90}}" x2="{{_ 210}}" y2="{{_ 90}}"/>
<line x1="{{_ 0}}" y1="{{_ 100}}" x2="{{_ 210}}" y2="{{_ 100}}"/>`)
})